name: Quality

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # every Sunday at midnight
  schedule:
    - cron: '0 0 * * 0'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Get Python version
        id: python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Restore cache
        id: cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: poetry-${{ runner.os }}-${{ steps.python-version.outputs.version }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install

      - name: Set Python location
        run: echo "CODEQL_PYTHON=$(poetry run which python)" >> $GITHUB_ENV

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: python
          setup-python-dependencies: false

      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v1

  linting:
    name: Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Set up Python
        uses: actions/setup-python@v2.2.2

      - name: Get Python version
        id: python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Restore cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ steps.python-version.outputs.version }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run pre-commit
        uses: pre-commit/action@v2.0.3
