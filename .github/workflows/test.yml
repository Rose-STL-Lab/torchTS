name: Tests

on:
  push:
    branches:
      - '*'
    paths-ignore:
      - 'docs/**'
      - '**.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'

jobs:
  test:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        os: [Ubuntu, macOS, Windows]
        python-version: [3.7, 3.8, 3.9]

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get Python version
        id: python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Restore cache
        id: cache
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: poetry-${{ runner.os }}-${{ steps.python-version.outputs.version }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install

      - name: Run tests
        run: poetry run pytest tests/ --cov=torchts

      - name: Generate coverage report
        run: poetry run coverage xml

      - name: Upload coverage report
        if: success()
        uses: codecov/codecov-action@v2.0.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
