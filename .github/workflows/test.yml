name: Tests

on:
  push:
    branches:
      - '*'
    paths-ignore:
      - 'docs/**'
      - '**.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'

jobs:
  test:
    name: '${{ matrix.os_name }}: Python ${{ matrix.python }}'
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: [3.7, 3.8, 3.9]
        include:
          - os: ubuntu-latest
            os_name: Linux
            poetry_cache: ~/.cache/pypoetry

          - os: macos-latest
            os_name: macOS
            poetry_cache: ~/Library/Caches/pypoetry

          - os: windows-latest
            os_name: Windows
            poetry_cache: ~\AppData\Local\pypoetry\Cache

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Set up Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python }}

      - name: Install Poetry
        uses: Gr1N/setup-poetry@v4

      - name: Write environment information to a file
        run: |
          pwd > environment
          python --version >> environment

      - name: Restore cache
        id: poetry-cache
        uses: actions/cache@v2.1.6
        if: runner.os != 'Windows'
        with:
          path: ${{ matrix.poetry_cache }}
          key: poetry|${{ hashFiles('environment') }}|${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: poetry install
        if: steps.poetry-cache.outputs.cache-hit != 'true'

      - name: Run tests
        run: poetry run pytest tests/ --cov=torchts

      - name: Generate coverage report
        run: poetry run coverage xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        if: success()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
